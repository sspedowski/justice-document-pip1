name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ci
      JWT_SECRET: testjwt
      SESSION_SECRET: testsession
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: adminpass
      OPENAI_API_KEY: test-openai-key

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Root Dependencies
        run: npm install

      - name: Install Backend Dependencies
        working-directory: justice-server
        run: npm install

      - name: Install Frontend Dependencies
        working-directory: justice-dashboard
        run: npm install

      - name: Validate Environment
        run: npm run validate || true

      - name: Start Backend
        run: |
          nohup npm start &
          sleep 5
          curl --fail http://localhost:3000/api/health

      - name: Test Login Endpoint
        run: |
          curl --fail -X POST http://localhost:3000/api/login \
            -H "Content-Type: application/json" \
            -d '{"username":"admin","password":"adminpass"}'

      - name: Run Tests
        run: npm test || echo "Tests skipped"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm install
          cd justice-server && npm install
          cd ../justice-dashboard && npm install

      - name: Build Frontend
        working-directory: justice-dashboard
        run: npm run build || echo "No build script found"

      - name: Deploy to Render
        if: success()
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          if [ -n "$RENDER_DEPLOY_HOOK" ]; then
            curl -X POST "$RENDER_DEPLOY_HOOK"
            echo "✅ Deployed to Render"
          else
            echo "⚠️  RENDER_DEPLOY_HOOK not set, skipping deployment"
          fi
