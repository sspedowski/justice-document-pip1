name: Justice Dashboard CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend API Tests
  api-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: justice-dashboard/package.json
    
    - name: Install dependencies
      run: |
        cd justice-dashboard
        npm ci
    
    - name: Run API tests
      run: |
        cd justice-dashboard
        npx jest --coverage --ci
      env:
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET_TEST }}
        ADMIN_USER: admin
        ADMIN_PASS: adminpass
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: justice-dashboard/coverage
        flags: api-tests

  # End-to-End Tests
  e2e-tests:
    runs-on: ubuntu-latest
    needs: api-tests

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: justice-dashboard/package.json
    
    - name: Install dependencies
      run: |
        cd justice-dashboard
        npm ci
    
    - name: Start backend server
      run: |
        cd justice-dashboard
        npm run dev:server &
        sleep 10
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-for-ci
        ADMIN_USER: admin
        ADMIN_PASS: adminpass
    
    - name: Start frontend server
      run: |
        cd justice-dashboard
        npm run dev:client &
        sleep 15
    
    - name: Wait for servers to be ready
      run: |
        npx wait-on http://localhost:5174 --timeout 60000
    
    - name: Run Cypress E2E tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: justice-dashboard
        wait-on: 'http://localhost:5174'
        wait-on-timeout: 120
        record: true
        parallel: true
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Cypress screenshots on failure
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: justice-dashboard/cypress/screenshots
    
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: justice-dashboard/cypress/videos

  # Security and Code Quality
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd justice-dashboard
        npm audit --audit-level high
    
    - name: Run dependency check
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'

  # Deploy to staging (on main branch)
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [api-tests, e2e-tests, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging environment
      run: |
        echo "ðŸš€ Deploying to staging environment..."
        # Add your deployment commands here
        # Example: Deploy to Azure, AWS, or other cloud provider
    
    - name: Notify deployment status
      run: |
        echo "âœ… Staging deployment complete!"
        echo "ðŸ”— Staging URL: https://justice-dashboard-staging.example.com"
